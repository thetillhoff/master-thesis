tosca_definitions_version: tosca_simple_yaml_1_3 # other definitions could be imported

description: >
  Describing an pxe-boot environment as low-level proof-of-concept, since tosca expects to be able to instantiate automatically (direct call to cloud provider or hypervisor)

imports:
  - types/node-types.tosca
  - types/capability-types.tosca

topology_template:
  inputs: # to-be-provided at runtime
    cidr:
      type: string # no cidr type exists
      default: 10.0.0.0/24
      description: cidr for pxe

  node_templates:
    pxe_network:
      type: tosca.nodes.network.Network # or tosca:Network or just Network
      properties:
        ip_version: 4
        cidr: { get_input: cidr }
        network_name: pxe_enabled_network # alternatively "network_id: ..."
        network_type: flat # or vlan or gre or vxlan
        physical_network: physnet1 # required if network_type if flat or vlan
        dhcp_enabled: false # manually provided here for pxe. Could be left true when using pxe in dhcp-proxy-mode

    pxe_storage: # for os image and os auto-install file
      type: tosca.nodes.Storage.BlockStorage
      properties:
        size: 20 GB # typeof <scalar-unit.size>
      artifacts:
        some_os_image:
          type: tosca.artifacts.Deployment.Image.VM.ISO
          # not enough documentation f.e. how to specify more (like source)
          file: some_os_image.iso
        ipxe_image:
          type: tosca.artifacts.Deployment.Image
          # not enough documentation
          file: ipxe.efi
        ipxe_script:
          type: tosca.artifacts.File
          file: boot.ipxe
        os_autoinstall_config:
          type: tosca.artifacts.file
          file: auto-install.conf
    
    pxe_host:
      type: pxe_server
      requirements:
        - local_storage:
            node: pxe_storage
            relationship:
              type: AttachesTo
              properties:
                location: /mnt/pxe
      attributes:
        networks:
          - network_name: pxe_network
      artifacts:
        dhcp_config:
          type: tosca.artifacts.File
          file: dhcp_software_specific_config.conf
      capabilities:
        host:
          properties:
            architecture: x86_64
            type: linux
      interfaces:
        Standard:
          create:
            implementation: setup_dhcp.sh
            inputs:
              config_file: { get_artifact: [ SELF, dhcp_config ] } #spec simple-profile 4.8.1
              os_image: { get_artifact: [pxe_storage, some_os_image ] }
              os_autoinstall_config: { get_artifact: [pxe_storage, os_autoinstall_config ] }
              ipxe_image: { get_artifact: [pxe_storage, ipxe_image ] }
              ipxe_script: { get_artifact: [pxe_storage, ipxe_script ] }
