tosca_definitions_version: tosca_hardware_0_1

artifact_types:
  htmlFile:
    # derived_from: tosca.artifacts.File
    properties:
      path:
        type: string

node_types:
  abstractComputeNode:
    properties:
      ip: string
      cpu_cores: integer
      ram: float
    #capabilities:
      #tosca.capabilities.Compute # adds compatibility to tosca simple profile

  webNode:
    derived_from: abstractComputeNode
    properties:
      index.html:
        type: string
        description: Defines the contents of the index.html of the webserver.
        required: true
    artifacts:
      index:
        file: files/index.html
        type: htmlFile
    interfaces:
      Standard:
        create: # What should the orchestrator do when instantiating this type of node?
          implementation: scripts/web_create.sh
          inputs:
            # Copy index contents to server
            index_content: { get_artifact: [ SELF, index ] }

topology_template:
  inputs:
    macAddresses:
      type: string
      description: Simple string typed parameter definition with no constraints.
      required: true
  node_templates:
    html:
      type: webNode
      artifacts:
        indexFile:
          path: files/index.html
      properties:
        files:
          - { get_artifact: [SELF, indexFile] }
        index.html: |
          <html>
            <body>
            <h1>I am HTML!</h1>
            </body>
          </html>
