# Don't function as a DNS server:
port=0

# Function as a tftp server
enable-tftp
tftp-secure # enable tftp security - lol

# bind to interface
interface=eth0

# Log lots of extra information about DHCP transactions.
log-dhcp

# set subnet
dhcp-range=XXX.XXX.XXX.XXX,proxy

# Set the root directory for files available via TFTP.
tftp-root=/tftp

# Disable re-use of the DHCP servername and filename fields as extra
# option space. That's to avoid confusing some old or broken DHCP clients.
dhcp-no-override


# Sets a tag for the appropriate bootloader
dhcp-match=set:BIOS,option:client-arch,0
dhcp-match=set:EFI,option:client-arch,7
dhcp-match=set:EFI,option:client-arch,9
dhcp-match=set:EFI,option:client-arch,6

#dhcp-boot=tag:BIOS,undionly.kpxe,192.168.1.120

# set tag "ipxe" if request comes from iPXE ("iPXE" user class)
dhcp-userclass=set:ipxe,iPXE
# alternative way, look for option 175
dhcp-match=set:ipxe,175
# if request comes from iPXE, direct it to boot to bootmenu
#   boot.ipxe is set via start.sh!   
#dhcp-boot=tag:ipxe,http://boot.ipxe.org/demo/boot.php
dhcp-boot=tag:ipxe,http://xxx.xxx.xxx.xxx/default
# Checks for iPXE Client Option 175:
#dhcp-match=set:ipxe,175

# The boot filename(), Server name, Server Ip Address)
dhcp-boot=tag:!ipxe,tag:EFI,ipxe.efi

dhcp-boot=tag:!ipxe,tag:!EFI,undionly.kpxe

# Certain settings only work together,
# These 3 all work together, when acting as a true DHCP server
#   dhcp-range=192.168.2.100,192.168.2.200
#   dhcp-boot=
#   dhcp-option-force=
# Wheras these two work together, (dhcp-option-force= doesn't work when using 'proxy') and (pxe-service= essentially takes over the 'function' of what dhcp-boot does.)
#   dhcp-range=192.168.2.0,proxy
#   pxe-service=

# The known types are x86PC, PC98, IA64_EFI, Alpha, Arc_x86, Intel_Lean_Client, IA32_EFI, ARM_EFI, BC_EFI, Xscale_EFI and X86-64_EFI
pxe-service=tag:!ipxe,x86PC, "Boot to X86PC", undionly.kpxe # <- for gen1 hyper-v vm
pxe-service=tag:!ipxe,X86-64_EFI, "Boot to X86-64_EFI", ipxe.efi # <- for gen2 hyper-v vm
pxe-service=tag:!ipxe,BC_EFI, "Boot to BC_EFI", ipxe.efi # <- for an actual real-world machine which was used in tests
